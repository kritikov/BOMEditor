BomEditor - Δημιουργία και Διαχείριση Bill of Material (BOM) στον Browser

version 1.0.0

Η BomEditor είναι μία κλάση JavaScript που επιτρέπει την δημιουργία και διαχείριση ενός Bill of Material (BOM) στον browser. Η βιβλιοθήκη έχει 
σχεδιαστεί για να απλοποιεί τη διαδικασία σχεδιασμού, επεξεργασίας και υπολογισμού των απαιτούμενων υλικών για κατασκευαστικά ή παραγωγικά έργα.


Γενικά

Ο BomEditor παρέχει δύο ειδών λειτουργίες: τον editor όπου σχεδιάζεται το προϊόν με drag and drop λειτουργίες, και τις προβολές όπου 
παρουσιάζονται τα διάφορα αποτελέσματα που προκύπτουν από τον σχεδιασμό, όπως οι συνολικές απαιτήσεις υλικών. Υπάρχει ιστορικό για να 
επιτρέπει τις λειτουργίες undo / redo και παρέχει υποστήριξη σε δύο γλώσσες, την αγγλική και την ελληνική.

Τα βασικά συστατικά του BOM στον σχεδιασμό του BomEditor είναι τρία:

	υλικά: τα ακατέργαστα υλικά που χρησιμοποιούνται κατά την παραγωγική διαδικασία για την δημιουργία ενός εξαρτήματος ή του τελικού προϊόντος.
	επιστροφές: υλικά που δημιουργούνται κατά την παραγωγική διαδικασία χωρίς να χρειάζονται στην επόμενη φάση παραγωγής αλλά ενδεχομένως να χρειάζονται κωδικό ώστε να αξιοποιηθούν διαφορετικά
	εξαρτήματα: παραγώμενα υποπροϊόντα που δημιουργούνται κατά την φάση μίας παραγωγικής διαδικασίας και χρειάζονται για την επόμενη φάση. Μπορούν να χρησιμοποιούν υλικά ή άλλα εξαρτήματα. 


Χρήση

Ο BomEditor περιλαμβάνει δύο αρχεία, ένα σε javascript και ένα σε css. Η javascript περιλαμβάνει την κλάση BomEditor και η χρήση της γίνεται με την 
δήλωση ενός instance, περνώντας παραμετρικά το div στο οποίο θα δημιουργηθεί ο editor ή o viewer. Είναι δυνατή η χρήση πολλών instances στην 
ίδια σελίδα ώστε να υπάρχουν διαφορετικοί editors αν αυτό είναι επιθυμητό. Η κλάση χρησιμοποιεί το πρόθεμα be- για να δηλώσει τις διάφορες κλάσεις css 
που περιλαμβάνονται στο αντίστοιχο αρχείο. 


Δημιουργία instance

Για να χρησιμοποιήσουμε τον BomEditor δημιουργούμε ένα instance της κλάσης BomEditor:

var bomEditor = new BomEditor(options);

όπου η options περιλαμβάνει τα παρακάτω properties:

	element: το div που θα χρησιμοποιηθεί για να εμφανιστεί ο editor (υποχρεωτικό)
	language: η γλώσσα που θα χρησιμοποιηθεί στο interface και μπορεί να πάρει δύο τιμές: 'EN' ή 'GR' (default είναι η 'EN').
	decimals: το πλήθος των δεκαδικών που θα εμφανίζονται (default είναι το 2).
	numberFormat: η μορφοποίηση των αριθμών όπως αυτή χρησιμοποιείται από την μέθοδο toLocaleString της javascript (default είναι η 'el-GR').
	allowAlertMessages: επιτρέπει ή όχι την εμφάνιση μηνυμάτων με την χρήση alert σε διάφορες περιπτώσεις που δεν γίνεται σωστά κάποια ενέργεια από τον χρήστη
	attachExpandingEvent: επιτρέπει την προσθήκη γενικών events στο body του document που πρέπει να δηλώνονται μόνο μία φορά. Σε περίπτωση που υπάρχουν πάνω 
		από ένας BomEditor σε μία σελίδα, η attachExpandingEvent πρέπει να έχει τιμή true μόνο στον πρώτο, και στα υπόλοιπα instanses να έχει τιμή false ώστε 
		να αποφεχθούν οι διπλές δηλώσεις.


Δημόσιες Μέθοδοι της BomEditor

newProduct(): δημιουργεί ένα νέο BOM με ένα εξάρτημα στην ρίζα που είναι και το τελικό προϊόν.

draw(bom): εμφανίζει στον editor ένα νέο bom και χρησιμοποείται συνήθως κατά την ανάγνωση ενός αποθηκευμένου προϊόντος σε αρχείο. Το bom αποτελείται από items της μορφής:

	item = {
		code: "<value>",
		description: "<value>",
		quantity: <value>,
		unit: "<value>",
		type: <value>,
		scrap: <value>,
		items: [],
	}

	όπου:

	code: είναι ο κωδικός του εξαρτήματος ή του υλικού και μπορεί να πάρει οποιαδήποτε τιμή. 
	description: η περιγραφή του εξαρτήματος ή του υλικού 
	quantity: η ποσότητα που απαιτείται
	unit: η μονάδα μέτρησης (δεν χρησιμοποιείται λίστα επιλογής και μπορεί να πάρει οποιαδήποτε τιμή)
	type: το είδος του υλικού (1 για εξάρτημα, 2 για υλικό, 3 για επιστροφή)
	scrap: το ποσοστό σε % που θα αχρηστευθεί κατά την παραγωγική διαδικασία
	items: πίνακας που περιέχει τα υλικά ή εξαρτήματα που χρειάζονται για την παραγωγή του συγκεκριμένου εξαρτήματος


clear(): καθαρίζει τον editor

undo(): πηγαίνει τον editor μία κίνηση πίσω

redo(): πηγαίνει τον editor μία κίνηση μπροστά

getBOM(): επιστρέφει το bom που περιέχεται στον editor σε μορφή object

getBOMAsJson(): επιστρέφει το bom που περιέχεται στον editor σε μορφή json

drawView(options): εμφανίζει μία προβολή του bom για έλεγχο των αποτελεσμάτων. Η options περιλαμβάνει τα παρακάτω properties:

	element: το div στο οποίο θα εμφανιστεί η προβολή
	targetQuantity: η ποσότητα του προϊόντος που θέλουμε να κατασκευάσουμε βάση του bom
	view: η επιθυμητή προβολή και μπορεί να πάρει μία από τις τιμές 'partsHorView', 'requirementsHorView', 'compareScrapView, 'requirementsPerCodeView', 'requirementsPerRawView', 'requirementsVerView', 'requirementsTreeView'.


Για την χρήση του undo/redo χρησιμοποείται το event onHistoryChange του BomEditor. Σαν παράδειγμα έχουμε το εξής:

	// δημιουργία instance
	var bomEditor = new BomEditor({ element: canvas, language: page.language, allowAlertMessages: true });

	// δημιουργία νέου προϊόντος
	bomEditor.newProduct();

	// ενεργοποίηση των buttons του interface όταν υπάρχει κάποια αλλαγή στο history του bomEditor
	let undoButton = document.getElementById("undo");
	let redoButton = document.getElementById("redo");
	bomEditor.onHistoryChange((event) => {
		undoButton.disabled = !event.detail.undoEnabled;
		redoButton.disabled = !event.detail.redoEnabled;
	});

	// μέθοδος που καλείται από το click event του undoButton όταν είναι ενεργό
	function undo() {
		bomEditor.undo();
	}

	// μέθοδος που καλείται από το click event του redoButton όταν είναι ενεργό
	function redo() {
		bomEditor.redo();
	}